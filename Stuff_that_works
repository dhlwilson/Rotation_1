library(Seurat)
library(dplyr)
library(Matrix)
library(tidyverse)

#version check (3.1.1)
packageVersion("Seurat")

#load dataset
newdf <- readRDS("~/R/Brittan_Group_Data/bioinformatics_Cass/objects/new.endothelial.heart_Cass_May2019.rds")

#generate clustering map
DimPlot(newdf, reduction.use = "umap", label = T)

#Generate gene feature plots with healthy and MI data mapped separately.
FeaturePlot(newdf, features = c("GOI"), split.by = "condition", label = T)

#Look up GOI and generate dot plots for individual treatment groups or datasets
DotPlot(newdf, features = c("GOI"), group.by = "condition")
DotPlot(newdf, features = c("GOI"), group.by = "dataset")

#save.SNN=T saves the SNN so that the  SLM algorithm can be rerun using the same graph, but with a different resolution value (see docs for full details)
newdf <- FindClusters(newdf)

#generate tSNE plot of clusters
newdf <- RunTSNE(newdf, dims.use = 0:16, do.fast = T)
TSNEPlot(newdf, do.label = T, label = T) #total cell population
TSNEPlot(newdf, do.label = T, split.by = "condition", label = T) #split tSNE by Healthy vs. MI

# find markers for each cluster 
cluster0.markers <- FindMarkers(newdf, ident.1 = 0, min.pct = 0.25)
cluster1.markers <- FindMarkers(newdf, ident.1 = 1, min.pct = 0.25)
cluster2.markers <- FindMarkers(newdf, ident.1 = 2, min.pct = 0.25)
cluster3.markers <- FindMarkers(newdf, ident.1 = 3, min.pct = 0.25)
cluster4.markers <- FindMarkers(newdf, ident.1 = 4, min.pct = 0.25)
cluster5.markers <- FindMarkers(newdf, ident.1 = 5, min.pct = 0.25)
cluster6.markers <- FindMarkers(newdf, ident.1 = 6, min.pct = 0.25)
cluster7.markers <- FindMarkers(newdf, ident.1 = 7, min.pct = 0.25)
cluster8.markers <- FindMarkers(newdf, ident.1 = 8, min.pct = 0.25)
cluster9.markers <- FindMarkers(newdf, ident.1 = 9, min.pct = 0.25)
cluster10.markers <- FindMarkers(newdf, ident.1 = 10, min.pct = 0.25)
cluster11.markers <- FindMarkers(newdf, ident.1 = 11, min.pct = 0.25)
cluster12.markers <- FindMarkers(newdf, ident.1 = 12, min.pct = 0.25)
cluster13.markers <- FindMarkers(newdf, ident.1 = 13, min.pct = 0.25)
cluster14.markers <- FindMarkers(newdf, ident.1 = 14, min.pct = 0.25)
cluster15.markers <- FindMarkers(newdf, ident.1 = 15, min.pct = 0.25)
cluster16.markers <- FindMarkers(newdf, ident.1 = 16, min.pct = 0.25)

#print top 10 markers for each cluster
print(head(cluster0.markers, 10))
print(head(cluster1.markers, 10))
print(head(cluster2.markers, 10)) #Vegfc @8
print(head(cluster3.markers, 10)) 
print(head(cluster4.markers, 10))
print(head(cluster5.markers, 10)) #Vegfc @21
print(head(cluster6.markers, 10)) 
print(head(cluster7.markers, 10))
print(head(cluster8.markers, 10))
print(head(cluster9.markers, 10))
print(head(cluster10.markers, 10))
print(head(cluster11.markers, 10))
print(head(cluster12.markers, 10))
print(head(cluster13.markers, 10)) #Vegfc @20
print(head(cluster14.markers, 10))
print(head(cluster15.markers, 10)) #Vegfc@???
print(head(cluster16.markers, 10))

#extract cluster genes as a string
cluster.marker.string <- row.names(cluster)
#add cluster genes to original cluster markers as column
cluster.markers <- cbind(cluster.markers, cluster.marker.string) # can change cluster.string to column name using Gene = cluster.marker.string
#Find ranking for GOI in cluster.markers
which(cluster2.markers == "Vegfc", arr.ind=TRUE)

#import my list of Vegfc pathway Genes of interest and store them as named variable string
Vegfc_pathway_GOIs <- read.delim('~/R/Brittan_Group_Data/bioinformatics_Cass/objects/Vegfc_Pathway_GOIs.txt', sep="\t")

#Violin plot showing probability density at different expression levels of the Vegfc for each cluster Healthy vs MI.
VlnPlot(newdf, features = "Vegfc", split.by = "condition", pt.size = 0.25)
VlnPlot(newdf, features = "Vegfc", split.by = "condition", pt.size = 0) # no points

#Show the expression of the gene in the context of all the cells, this helps validate the specificity of the marker or the quality of the clustering.
FeaturePlot(newdf, features = "Vegfc")
FeaturePlot(newdf, features = "Vegfc", split.by = "condition", label = T) #split by Healthy vs MI
